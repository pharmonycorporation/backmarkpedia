{"version":3,"sources":["./src/app/customers/customers.component.ts","./src/app/customers/customers.component.html","./src/app/customers/customers.ts","./src/app/customers/customer-dialog/customer-dialog.component.ts","./src/app/customers/customer-dialog/customer-dialog.component.html","./src/app/customers/customers.module.ts"],"names":[],"mappings":"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","file":"customers-customers-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service'; \r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CustomerDialogComponent } from './customer-dialog/customer-dialog.component';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { customers } from './customers';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.scss']\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n  public customers = [];\r\n  public stores = [\r\n    { id: 1, name: 'Store 1' },\r\n    { id: 2, name: 'Store 2' }\r\n  ]\r\n  public countries = [];\r\n  public page: any;\r\n  public count = 6;\r\n  public settings:Settings;\r\n  constructor(public appService:AppService, public dialog: MatDialog, public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.countries = this.appService.getCountries();\r\n    this.customers = customers; \r\n  }\r\n\r\n  public onPageChanged(event){\r\n    this.page = event; \r\n    window.scrollTo(0,0); \r\n  }\r\n\r\n  public openCustomerDialog(data:any){\r\n    const dialogRef = this.dialog.open(CustomerDialogComponent, {\r\n      data: {\r\n        customer: data,\r\n        stores: this.stores,\r\n        countries: this.countries\r\n      },\r\n      panelClass: ['theme-dialog'],\r\n      autoFocus: false,\r\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr' \r\n    });\r\n    dialogRef.afterClosed().subscribe(customer => { \r\n      if(customer){    \r\n        const index: number = this.customers.findIndex(x => x.id == customer.id);\r\n        if(index !== -1){\r\n          this.customers[index] = customer;\r\n        } \r\n        else{ \r\n          let last_customer= this.customers[this.customers.length - 1]; \r\n          customer.id = last_customer.id + 1;\r\n          this.customers.push(customer);  \r\n        }          \r\n      }\r\n    });\r\n  }\r\n\r\n  public remove(customer:any){  \r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"400px\",\r\n      data: {\r\n        title: \"Confirm Action\",\r\n        message: \"Are you sure you want remove this customer?\"\r\n      }\r\n    }); \r\n    dialogRef.afterClosed().subscribe(dialogResult => { \r\n      if(dialogResult){\r\n        const index: number = this.customers.indexOf(customer);\r\n        if (index !== -1) {\r\n          this.customers.splice(index, 1);  \r\n        } \r\n      } \r\n    }); \r\n  }\r\n\r\n}\r\n","\r\n<div class=\"content-body\">\r\n    <!-- row -->\r\n    <div class=\"container-fluid\">\r\n\r\n<div class=\"p-1\">\r\n    <mat-card class=\"p-0\"> \r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2\">\r\n            <h2>Customers List</h2>  \r\n            <button mat-raised-button color=\"primary\" (click)=\"openCustomerDialog(null)\">Add Customer</button>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"mat-table admin-table\">\r\n            <table class=\"table\">\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th>Full Name</th>\r\n                        <th>Username</th>\r\n                        <th>Email</th>\r\n                        <th>Store</th>\r\n                        <th>Wallet Balance</th>\r\n                        <th>Revenue</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    \r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let customer of customers | paginate: { itemsPerPage: count, currentPage: page }\" class=\"mat-row\">\r\n                        <td>{{customer.firstName}} {{customer.lastName}}</td>\r\n                        <td>{{customer.username}}</td>\r\n                        <td>{{customer.email}}</td>\r\n                        <td>{{ ( stores | filterById : customer.storeId )?.name }}</td> \r\n                        <td>${{customer.walletBalance.toFixed(2)}}</td>\r\n                        <td>${{customer.revenue.toFixed(2)}}</td>     \r\n                        <td>\r\n                            <div class=\"p-1 actions\">          \r\n                                <button mat-mini-fab color=\"primary\" matTooltip=\"Edit\" (click)=\"openCustomerDialog(customer)\">\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\" (click)=\"remove(customer)\">\r\n                                    <mat-icon>delete</mat-icon>\r\n                                </button>\r\n                            </div>\r\n                        </td> \r\n                    </tr>\r\n                </tbody>\r\n                \r\n            </table>\r\n \r\n      \r\n        </div>\r\n    </mat-card>\r\n\r\n    <div *ngIf=\"customers.length > 0\" fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100\"> \r\n            <mat-card class=\"p-0 text-center\">           \r\n                <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\"></pagination-controls>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>","export const customers = [\r\n    { \r\n        id: 1, \r\n        username: 'bruno.v', \r\n        email: 'bruno@company.com', \r\n        firstName: 'Bruno', \r\n        lastName: 'Vespa', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 5255, \r\n        revenue: 3450,\r\n        billing: { \r\n            firstName: 'Bruno', \r\n            lastName: 'Vespa', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'bruno@company.com',\r\n            phone: '(415) 231-0332',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 2, \r\n        username: 'andy.79', \r\n        email: 'warhol@gmail.com', \r\n        firstName: 'Andy', \r\n        lastName: 'Warhol', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 8055, \r\n        revenue: 7200,\r\n        billing: { \r\n            firstName: 'Andy', \r\n            lastName: 'Warhol', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'warhol@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 3, \r\n        username: 'pretty', \r\n        email: 'ashley@gmail.com', \r\n        firstName: 'Ashley', \r\n        lastName: 'Ahlberg', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 17200, \r\n        revenue: 2200,\r\n        billing: { \r\n            firstName: 'Ashley', \r\n            lastName: 'Ahlberg', \r\n            middleName: '',\r\n            company: 'Company 5', \r\n            email: 'ashley@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 4, \r\n        username: 'julia.a', \r\n        email: 'julia@gmail.com', \r\n        firstName: 'Julia', \r\n        lastName: 'Aniston', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 9480, \r\n        revenue: 1470,\r\n        billing: { \r\n            firstName: 'Julia', \r\n            lastName: 'Aniston', \r\n            middleName: '',\r\n            company: 'Company 5', \r\n            email: 'julia@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 5, \r\n        username: 'lusia.m', \r\n        email: 'lusia@gmail.com', \r\n        firstName: 'Lusia', \r\n        lastName: 'Manuel', \r\n        middleName: '',\r\n        storeId: 1,  \r\n        walletBalance: 6200, \r\n        revenue: 3250,\r\n        billing: { \r\n            firstName: 'Lusia', \r\n            lastName: 'Manuel', \r\n            middleName: '',\r\n            company: 'Company 4', \r\n            email: 'lusia@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 6, \r\n        username: 'adam.s', \r\n        email: 'adam@gmail.com', \r\n        firstName: 'Adam', \r\n        lastName: 'Sandler', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 7580, \r\n        revenue: 2950,\r\n        billing: { \r\n            firstName: 'Adam', \r\n            lastName: 'Sandler', \r\n            middleName: '',\r\n            company: 'Company 1', \r\n            email: 'adam@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 7, \r\n        username: 'tereza.s', \r\n        email: 'tereza@gmail.com', \r\n        firstName: 'Tereza', \r\n        lastName: 'Stiles', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 5240, \r\n        revenue: 1095,\r\n        billing: { \r\n            firstName: 'Tereza', \r\n            lastName: 'Stiles', \r\n            middleName: '',\r\n            company: 'Company 3', \r\n            email: 'tereza@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    },\r\n    { \r\n        id: 8, \r\n        username: 'michael.b', \r\n        email: 'michael@gmail.com', \r\n        firstName: 'Michael', \r\n        lastName: 'Blair', \r\n        middleName: '',\r\n        storeId: 2,  \r\n        walletBalance: 7340, \r\n        revenue: 4580,\r\n        billing: { \r\n            firstName: 'Michael', \r\n            lastName: 'Blair', \r\n            middleName: '',\r\n            company: 'Company 3', \r\n            email: 'michael@gmail.com',\r\n            phone: '(212) 457-2308',\r\n            country: {name: 'United States', code: 'US'},\r\n            city: 'Los Angeles',\r\n            state: 'California',\r\n            zip: '90201',\r\n            address: 'Palos Verdes Peninsula'\r\n        } \r\n    }\r\n]","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-customer-dialog',\r\n  templateUrl: './customer-dialog.component.html',\r\n  styleUrls: ['./customer-dialog.component.css']\r\n})\r\nexport class CustomerDialogComponent implements OnInit {\r\n  public form: FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<CustomerDialogComponent>, \r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              public fb: FormBuilder) { }\r\n\r\n  ngOnInit(): void {   \r\n    this.form = this.fb.group({\r\n      id: 0, \r\n      username: ['', Validators.required],\r\n      email: null,\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      middleName: null,\r\n      storeId: null,  \r\n      walletBalance: null, \r\n      revenue: null,\r\n      billing: this.fb.group({ \r\n        firstName: ['', Validators.required],\r\n        lastName: ['', Validators.required],\r\n        middleName: '',\r\n        company: '',\r\n        email: ['', Validators.required],\r\n        phone: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        state: '',\r\n        zip: ['', Validators.required],\r\n        address: ['', Validators.required]\r\n      }) \r\n    }); \r\n\r\n    if(this.data.customer){\r\n      this.form.patchValue(this.data.customer); \r\n    };\r\n  }\r\n\r\n  public onSubmit(){\r\n    console.log(this.form.value);\r\n    if(this.form.valid){\r\n      this.dialogRef.close(this.form.value);\r\n    }\r\n  }\r\n\r\n  public compareFunction(o1: any, o2: any) {\r\n    return (o1.name == o2.name && o1.code == o2.code);\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Customer</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\r\n    <div mat-dialog-content> \r\n        <mat-tab-group class=\"tab-content-wrapped\">\r\n            <mat-tab label=\"General Info\"> \r\n                <div fxLayout=\"row wrap\" class=\"mt-2\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>First name</mat-label>\r\n                            <input matInput placeholder=\"First name\" formControlName=\"firstName\" required>\r\n                            <mat-error *ngIf=\"form.controls.firstName.errors?.required\">First name is required</mat-error>   \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Last name</mat-label>\r\n                            <input matInput placeholder=\"Last name\" formControlName=\"lastName\" required>\r\n                            <mat-error *ngIf=\"form.controls.lastName.errors?.required\">Last name is required</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Middle Name/Initial</mat-label>\r\n                            <input matInput placeholder=\"Middle Name/Initial\" formControlName=\"middleName\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Username</mat-label>\r\n                            <input matInput placeholder=\"Username\" formControlName=\"username\" required> \r\n                            <mat-error *ngIf=\"form.controls.username.errors?.required\">Username is required</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Email</mat-label>\r\n                            <input matInput placeholder=\"Email\" formControlName=\"email\"> \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Store</mat-label>\r\n                            <mat-select formControlName=\"storeId\">\r\n                                <mat-option [value]=\"\">-</mat-option>\r\n                                <mat-option *ngFor=\"let store of data.stores\" [value]=\"store.id\">\r\n                                    <span>{{store.name}}</span>\r\n                                </mat-option>\r\n                            </mat-select> \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Wallet Balance ($)</mat-label>\r\n                            <input matInput formControlName=\"walletBalance\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Revenue ($)</mat-label>\r\n                            <input matInput formControlName=\"revenue\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>  \r\n            </mat-tab>\r\n            <mat-tab label=\"Billing\" formGroupName=\"billing\">\r\n                <div fxLayout=\"row wrap\" class=\"mt-2\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>First name</mat-label>\r\n                          <input matInput placeholder=\"First name\" formControlName=\"firstName\" required>\r\n                          <mat-error *ngIf=\"form.get('billing')['controls'].firstName.errors?.required\">First name is required</mat-error>   \r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Last name</mat-label>\r\n                          <input matInput placeholder=\"Last name\" formControlName=\"lastName\" required>\r\n                          <mat-error *ngIf=\"form.get('billing')['controls'].lastName.errors?.required\">Last name is required</mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Middle Name/Initial</mat-label>\r\n                          <input matInput placeholder=\"Middle Name/Initial\" formControlName=\"middleName\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Company</mat-label>\r\n                          <input matInput placeholder=\"Company\" formControlName=\"company\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Email</mat-label>\r\n                          <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                          <mat-error *ngIf=\"form.get('billing')['controls'].email.errors?.required\">Email is required</mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Phone</mat-label>\r\n                          <input matInput placeholder=\"Phone\" formControlName=\"phone\" required>\r\n                          <mat-error *ngIf=\"form.get('billing')['controls'].phone.errors?.required\">Phone is required</mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Country</mat-label>\r\n                            <mat-select placeholder=\"Country\" formControlName=\"country\" required [compareWith]=\"compareFunction\">\r\n                                <mat-option [value]=\"\">-</mat-option>\r\n                                <mat-option *ngFor=\"let country of data.countries\" [value]=\"country\">\r\n                                    {{country.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"form.get('billing')['controls'].country.errors?.required\">Country is required</mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>City</mat-label>\r\n                          <input matInput placeholder=\"City\" formControlName=\"city\" required>\r\n                          <mat-error *ngIf=\"form.get('billing')['controls'].city.errors?.required\">City is required</mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>State/Province</mat-label>\r\n                          <input matInput placeholder=\"State/Province\" formControlName=\"state\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Zip/Postal Code</mat-label>\r\n                          <input matInput placeholder=\"Zip/Postal Code\" formControlName=\"zip\" required>\r\n                          <mat-error *ngIf=\"form.get('billing')['controls'].zip.errors?.required\">Zip/Postal Code is required</mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" class=\"px-1\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                          <mat-label>Address</mat-label>\r\n                          <input matInput placeholder=\"Address (street, apartment, suite, unit etc.)\" formControlName=\"address\" required>\r\n                          <mat-error *ngIf=\"form.get('billing')['controls'].address.errors?.required\">Address is required</mat-error>\r\n                      </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </mat-tab>\r\n        </mat-tab-group> \r\n    </div>\r\n    <div mat-dialog-actions>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \r\n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n        </div> \r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { CustomersComponent } from './customers.component';\r\nimport { CustomerDialogComponent } from './customer-dialog/customer-dialog.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: CustomersComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomersComponent,\r\n    CustomerDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxPaginationModule\r\n  ]\r\n})\r\nexport class CustomersModule { }\r\n"],"sourceRoot":"webpack:///"}